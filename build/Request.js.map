{"version":3,"sources":["Request.js"],"names":["liferayId","themeDisplay","POST","method","headers","Authorization","btoa","body","headline","articleBody","r","GET","UPDATE","DELETE"],"mappings":";;;;;;;;;;AAAA,QAAMA,YAAYC,aAAlB,cAAkBA,EAAlB;;AAEA,QAAMC,OAAO,SAAPA,IAAO,CAAA,QAAA,EAAA,WAAA,EAA2B;AACpC,aAAO,QAAA,IAAA,CAAA,KAAA,CAAA,wDAAA,MAAA,CAAA,SAAA,EAAA,gBAAA,CAAA,EAAqG;AACxGC,gBADwG,MAAA;AAExGC,iBAAS;AACL,0BADK,kBAAA;AAELC,yBAAe,WAAWC,KAAI,sBAAJA;AAFrB,SAF+F;AAMxGC,cAAM,KAAA,SAAA,CAAe;AACjBC,oBADiB,QAAA;AAEjBC,uBAAAA;AAFiB,SAAf;AANkG,OAArG,EAAA,IAAA,CAUC,UAAA,CAAA,EAAA;AAAA,eAAOC,EAAP,IAAOA,EAAP;AAVR,OAAO,CAAP;AADJ,KAAA,C,CAcA;;;;;AAEA,QAAMC,MAAM,SAANA,GAAM,GAAM;AACd,aAAO,QAAA,IAAA,CAAA,KAAA,CAAA,wDAAA,MAAA,CAAA,SAAA,EAAA,gBAAA,CAAA,EAAqG;AACxGR,gBAAQ;AADgG,OAArG,EAAA,IAAA,CAEC,UAAA,CAAA,EAAA;AAAA,eAAOO,EAAP,IAAOA,EAAP;AAFR,OAAO,CAAP;AADJ,KAAA,C,CAMA;;;;;AAEA,QAAME,SAAS,SAATA,MAAS,CAAA,SAAA,EAAA,QAAA,EAAA,WAAA,EAAsC;AACjD,aAAO,QAAA,IAAA,CAAA,KAAA,CAAA,wDAAA,MAAA,CAAA,SAAA,EAAA,gBAAA,CAAA,EAAqG;AACxGT,gBADwG,KAAA;AAExGC,iBAAS;AACL,0BAAgB;AADX,SAF+F;AAKxGG,cAAM,KAAA,SAAA,CAAe;AACjBC,oBADiB,QAAA;AAEjBC,uBAAAA;AAFiB,SAAf;AALkG,OAArG,EAAA,IAAA,CASC,UAAA,CAAA,EAAA;AAAA,eAAOC,EAAP,IAAOA,EAAP;AATR,OAAO,CAAP;AADJ,KAAA,C,CAaA;;;;;AAEA,QAAMG,SAAS,SAATA,MAAS,CAAA,EAAA,EAAQ;AACnB,aAAO,QAAA,IAAA,CAAA,KAAA,CAAA,wDAAA,MAAA,CAAA,EAAA,EAAA,gBAAA,CAAA,EAA8F;AACjGV,gBADiG,QAAA;AAEjGC,iBAAS;AACL,0BAAgB;AADX;AAFwF,OAA9F,EAAA,IAAA,CAKC,UAAA,CAAA,EAAA;AAAA,eAAOM,EAAP,IAAOA,EAAP;AALR,OAAO,CAAP;AADJ,KAAA","sourcesContent":["const liferayId = themeDisplay.getSiteGroupId()\n\nconst POST = (headline, articleBody) => {\n    return Liferay.Util.fetch(`http://localhost:8080/o/headless-delivery/v1.0/sites/${liferayId}/blog-postings`,{\n        method: 'POST',\n        headers: { \n            'Content-Type': 'application/json',\n            Authorization: 'Basic ' + btoa('test@liferay.com:123')\n        },\n        body: JSON.stringify({\n            headline,\n            articleBody\n        })\n    }).then((r) => r.json())\n}\n\n//\n\nconst GET = () => {\n    return Liferay.Util.fetch(`http://localhost:8080/o/headless-delivery/v1.0/sites/${liferayId}/blog-postings`,{\n        method: 'GET',\n    }).then((r) => r.json())\n}\n\n//\n\nconst UPDATE = (liferayId, headline, articleBody) => {\n    return Liferay.Util.fetch(`http://localhost:8080/o/headless-delivery/v1.0/sites/${liferayId}/blog-postings`,{\n        method: 'PUT',\n        headers: { \n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n            headline,\n            articleBody\n        })\n    }).then((r) => r.json())\n}\n\n//\n\nconst DELETE = (id) => {\n    return Liferay.Util.fetch(`http://localhost:8080/o/headless-delivery/v1.0/sites/${id}/blog-postings`,{\n        method: 'DELETE',\n        headers: { \n            'Content-Type': 'application/json'\n        }\n    }).then((r) => r.json())\n}\n\nexport { GET, POST, UPDATE, DELETE }"]}